name: CI Build

on:
  push:
    branches: [ main, alpha, beta ]

jobs:

  #########
  # Build #
  #########
  boot:
    name: Boot
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Check Version
        run: ./check_version.sh

      - name: Get release attributes
        run: |
          SUFFIX="" 
          DOCKER_TAG=$GITHUB_REF_NAME
          COMMIT_BRANCH=test/$GITHUB_REF_NAME
          case $GITHUB_REF_NAME in
            main)
              DOCKER_TAG="latest"
              COMMIT_BRANCH="prod"
              ;;
            alpha)
              SUFFIX="A"
              ;;
            beta)
              SUFFIX="B"
              ;;
          esac
          echo "SUFFIX=$SUFFIX" >> $GITHUB_ENV
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
          echo "COMMIT_BRANCH=$COMMIT_BRANCH" >> $GITHUB_ENV
          echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
          PLATFORM=$(grep 'quarkusPlatformVersion' gradle.properties | cut -f 2 -d '=')
          echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV
          VERSION=$(grep 'version' build.gradle | cut -f 2 -d "'")$SUFFIX
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'gradle'

      - name: Tests & Build
        run: |
          ./gradlew build --no-daemon \
            -Dquarkus.package.type=native \
            -Dquarkus.native.container-build=true

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: src/main/docker/Dockerfile.native-micro
          tags: |
            ${{ vars.DOCKER_USERNAME }}/${{ env.REPO_NAME }}:${{ env.VERSION }}
            ${{ vars.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ env.DOCKER_TAG }}

      - name: Commit to branch
        run: |
          git checkout -b ${{ env.COMMIT_BRANCH }}
          sed -i "s/CHECK_VERSION_IN_BRANCH_PROD/${{ env.VERSION }}/g" docker-compose.yml
          sed -i "s/CHECK_VERSION_IN_BRANCH_PROD/${{ env.VERSION }}/g" README.md
          git config --global user.email ${{ github.actor }}@users.noreply.github.com
          git config --global user.name "GitHub Actions"
          git add .
          git commit -a -m 'Version ${{ env.VERSION }} to ${{ env.COMMIT_BRANCH }} branch.'
          git push origin ${{ env.COMMIT_BRANCH }} --force

      - name: Creating GitHub Tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ env.VERSION }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
